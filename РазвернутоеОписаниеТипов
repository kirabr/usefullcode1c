// Преобразует описание типов в строку с полным представлением.
// Примеры: "Справочник.<ИмяСправочника>", "Число (15, 2, Неотрицательный" и т.д.
// Описания составного типа разделяются точкой с запятой и пробелом.
//
// Параметры:
//  ОбычноеОписаниеТипов - ОписаниеТипов - 
// 
// Возвращаемое значение:
//  Строка - 
//
&НаСервереБезКонтекста
Функция РазвернутоеОписаниеТипов(Знач ОбычноеОписаниеТипов)
	
	Если ОбычноеОписаниеТипов = Неопределено Тогда
		 Возврат "Неопределено";
	КонецЕсли;
	
	ТипыКакXDTO = СериализаторXDTO.ЗаписатьXDTO(ОбычноеОписаниеТипов.Типы());
	
	ЗапXML = Новый ЗаписьXML;
	ЗапXML.УстановитьСтроку();
	ФабрикаXDTO.ЗаписатьXML(ЗапXML, ТипыКакXDTO,,,, НазначениеТипаXML.Явное);
	СтрТип = ЗапXML.Закрыть();
	
	Перевод = Новый Соответствие;
	Перевод.Вставить(ВРег("BusinessProcessRef"), "БизнесПроцесс");
	Перевод.Вставить(ВРег("ExternalDataSourceTableRef"), "ВнешнийИсточникДанныхТаблица");
	Перевод.Вставить(ВРег("DocumentRef"), "Документ");
	Перевод.Вставить(ВРег("TaskRef"), "Задача");
	Перевод.Вставить(ВРег("EnumRef"), "Перечисление");
	Перевод.Вставить(ВРег("ChartOfCalculationTypesRef"), "ПланВидовРасчета");
	Перевод.Вставить(ВРег("ChartOfCharacteristicTypesRef"), "ПланВидовХарактеристик");
	Перевод.Вставить(ВРег("ExchangePlanRef"), "ПланОбмена");
	Перевод.Вставить(ВРег("ChartOfAccountsRef"), "ПланСчетов");
	Перевод.Вставить(ВРег("CatalogRef"), "Справочник");
	Перевод.Вставить(ВРег("decimal"), "Число");
	Перевод.Вставить(ВРег("double"), "Число");
	Перевод.Вставить(ВРег("float"), "Число");
	Перевод.Вставить(ВРег("string"), "Строка");
	Перевод.Вставить(ВРег("anySimpleType"), "Строка");
	Перевод.Вставить(ВРег("anyURI"), "Строка");
	Перевод.Вставить(ВРег("duration"), "Строка");
	Перевод.Вставить(ВРег("gDay"), "Строка");
	Перевод.Вставить(ВРег("gMonth"), "Строка");
	Перевод.Вставить(ВРег("gMonthDay"), "Строка");
	Перевод.Вставить(ВРег("gYear"), "Строка");
	Перевод.Вставить(ВРег("gYearMonth"), "Строка");
	Перевод.Вставить(ВРег("NOTATION"), "Строка");
	Перевод.Вставить(ВРег("dateTime"), "Дата/время");
	Перевод.Вставить(ВРег("date"), "Дата/время");
	Перевод.Вставить(ВРег("time"), "Дата/время");
	Перевод.Вставить(ВРег("Boolean"), "Булево");
	
	РазвернутоеОписание = Новый Массив;
	
	Для НомерСтроки = 1 По СтрЧислоСтрок(СтрТип) Цикл
	
		ТекСтрока = СтрПолучитьСтроку(СтрТип, НомерСтроки);
		Поз = СтрНайти(ТекСтрока, " xsi:type=""Type""");
		Если Поз = 0 Тогда
			// это не строка с типом
			Продолжить;
		КонецЕсли;
		
		ПозНач = СтрНайти(ТекСтрока, ":",, Поз+16)+1;
		ПозКон = СтрНайти(ТекСтрока, "<",, Поз+16)-1;
		
		ПредставлениеТипаПервичное = Сред(ТекСтрока, ПозНач, ПозКон-ПозНач+1);
		ЭлементыПредставления = СтрРазделить(ПредставлениеТипаПервичное, ".");
		ПервыйПереведенный = Перевод[ВРег(ЭлементыПредставления[0])];
		Если ЗначениеЗаполнено(ПервыйПереведенный) Тогда
			
			Если ПервыйПереведенный = "Строка" Тогда
			
				ПервыйПереведенный = СтрШаблон("%1 (%2, %3)", 
					ПервыйПереведенный, 
					ОбычноеОписаниеТипов.КвалификаторыСтроки.Длина,
					ОбычноеОписаниеТипов.КвалификаторыСтроки.ДопустимаяДлина);
			
			КонецЕсли;
			
			Если ПервыйПереведенный = "Число" Тогда
			
				ПервыйПереведенный = СтрШаблон("%1 (%2, %3, %4)", 
					ПервыйПереведенный, 
					ОбычноеОписаниеТипов.КвалификаторыЧисла.Разрядность,
					ОбычноеОписаниеТипов.КвалификаторыЧисла.РазрядностьДробнойЧасти,
					ОбычноеОписаниеТипов.КвалификаторыЧисла.ДопустимыйЗнак);
			
			КонецЕсли;
				
			Если ПервыйПереведенный = "Дата/время" Тогда
			
				ПервыйПереведенный = СтрШаблон("%1 (%2)", 
					ПервыйПереведенный, 
					ОбычноеОписаниеТипов.КвалификаторыДаты.ЧастиДаты);
			
			КонецЕсли;
			
			ЭлементыПредставления[0] = ПервыйПереведенный;
			
		КонецЕсли;
		
		ПредставлениеТипа = СтрСоединить(ЭлементыПредставления, ".");
		
		РазвернутоеОписание.Добавить(ПредставлениеТипа);
		
	КонецЦикла;
	
	Возврат СтрСоединить(РазвернутоеОписание, "; ");

КонецФункции // РазвернутоеОписаниеТипов()
